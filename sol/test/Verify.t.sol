// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console2} from "forge-std/Test.sol";
import {Verify} from "../src/Verify.sol";

contract verifyTest is Test {
    Verify public verify;

    function setUp() public {
        verify = new Verify();
    }

    function test_verify_qap() public {
        Verify.G1Point memory A = Verify.G1Point(13759698281541362948100552505387368848018484641321223091947306654885243690704, 19085758730982447701000020042396817950058300487342942250774036309437784519175);
        Verify.G2Point memory B = Verify.G2Point(
            [20612212392094086306364540745946752302460861136183711417678330327971014080866, 6437904630709262427076771279303527374478637745469415580882092156608085150344],
            [21565022623258350584099627224199690557564040841853974577221108886135149707376, 185005392932418116559214466311134383327539521921765719365598421090223115630]
        );
        Verify.G1Point memory C = Verify.G1Point(14621062448483834300513373961816752655982234698599643148809688710706661982167, 19681235089638021251169009609775845392078975762008150095307573108444991436405);

        bool verified = verify.verify_qap(A, B, C);
        assertTrue(verified);
    }
}
